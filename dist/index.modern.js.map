{"version":3,"file":"index.modern.js","sources":["../src/lib/calender-context.ts","../src/components/header/styles.ts","../src/constant/index.ts","../src/tools/persian-date-tools.ts","../src/components/header/Header.tsx","../src/components/RenderDays.tsx","../src/utils/index.ts","../src/theme/colors.ts","../src/index.tsx"],"sourcesContent":["import { Context, createContext } from 'react'\n\ninterface CalenderSharedItems {\n  year?: number\n  setYear: Function\n  month?: number\n  setMonth: Function\n  selectedDay?: DateItem\n  daysRange?: DayRange\n  setDaysRange?: Function\n  setSelectedDay?: Function\n  selectMethod?: DaySelectType\n  onSelect?: (day: DateItem) => void\n  lookAndFeel: StyleObject\n}\n\n// @ts-ignore\nconst CalenderContext: Context<CalenderSharedItems> = createContext({})\nexport default CalenderContext\n","import styled from 'styled-components'\n\nconst StyledHeader = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  padding: 10px 0;\n  border-bottom: ${({ lookAndFeel, theme }) =>\n    `1px solid ${lookAndFeel.headBorderColor || theme.BORDER}`};\n\n  button {\n    cursor: pointer;\n    color: ${({ lookAndFeel }) => lookAndFeel.headTitleColor};\n    background: ${({ lookAndFeel }) =>\n      lookAndFeel.headBtnColor || 'transparent'};\n  }\n`\n\nexport { StyledHeader }\n","// @ts-nocheck\nconst REGEX = {\n  PER_NUM: /[۰-۹]/g,\n  EN_NUM: /[0-9]/g\n}\n\nenum COLORS {\n  TXT_FIRST = '#D2D2D2',\n  TRANSPARENT = 'transparent',\n  ACCENT = '#273c75',\n  HOLIDAY_BG = '#473938',\n  HOLIDAY_TXT = '#E56C6E',\n  NORMAL_DAY_BG = '#3F3F3F',\n  TODAY_BG = '#2a2a2a',\n  BORDER = '#414141'\n}\n\nenum WEEK_DAYS {\n  'Saturday' = 'شنبه',\n  'Sunday' = 'یکشنبه',\n  'Monday' = 'دوشنبه',\n  'Tuesday' = 'سه شنبه',\n  'Wednesday' = 'چهارشنبه',\n  'Thursday' = 'پنجشنبه',\n  'Friday' = 'جمعه'\n}\n\nenum PERSIAN_MONTH {\n  فروردین,\n  اردیبهشت,\n  خرداد,\n  تیر,\n  مرداد,\n  شهریور,\n  مهر,\n  آبان,\n  آذر,\n  دی,\n  بهمن,\n  اسفند\n}\n\nexport { REGEX, COLORS,WEEK_DAYS, PERSIAN_MONTH }\n","//@ts-nocheck\nimport jalaali, { JalaaliDateObject } from 'jalaali-js'\nimport { PERSIAN_MONTH } from '../constant'\n\nclass PersianDateTools {\n  private readonly locale: 'fa' | 'en'\n  private readonly todayDateIntl: Date\n  private readonly todayDatePer: JalaaliDateObject\n  private static instance: PersianDateTools\n\n  private constructor() {\n    this.locale = 'fa'\n    this.todayDateIntl = new Date(Date.now())\n    this.todayDatePer = jalaali.toJalaali(this.todayDateIntl)\n  }\n\n  static getSingletonInstance(): PersianDateTools {\n    if (!PersianDateTools.instance)\n      PersianDateTools.instance = new PersianDateTools()\n    return PersianDateTools.instance\n  }\n\n  private grabDate(options: Intl.DateTimeFormatOptions): number | string {\n    return this.todayDateIntl.toLocaleDateString(this.locale, options)\n  }\n\n  private convertToIntlDate = (\n    year: number,\n    month: number,\n    day: number\n  ): Date => {\n    return jalaali.jalaaliToDateObject(year, month, day)\n  }\n\n  get currentDate(): CurrentDate {\n    return {\n      year: this.todayDatePer.jy,\n      month: {\n        number: this.todayDatePer.jm,\n        name: this.grabDate({ month: 'long' })\n      },\n      day: {\n        number: this.todayDatePer.jd,\n        name: this.grabDate({ weekday: 'long' })\n      }\n    }\n  }\n\n  getMonthNameByNumber(num: number): string {\n    return PERSIAN_MONTH[num - 1]\n  }\n\n  getMonthLength = (year: number, month: number): number => {\n    return jalaali.jalaaliMonthLength(year, month)\n  }\n\n  getFirstDayOfMonth(year: number, month: number): number {\n    return this.convertToIntlDate(year, month, 2).getDay()\n  }\n\n  isOnCurrentMonth(monthNumber: number): boolean {\n    return (\n      this.getMonthNameByNumber(monthNumber) === this.currentDate.month.name\n    )\n  }\n\n  isToday(year: number, month: number, day: number): boolean {\n    if (year !== this.currentDate.year) return false\n    if (month !== this.currentDate.month.number) return false\n\n    return day === this.todayDatePer.jd\n  }\n\n  isFriday(dayInWeek: number): boolean {\n    // 6th day of the week in the persian calendar is Friday\n    return dayInWeek === 6\n  }\n}\n\nexport default PersianDateTools.getSingletonInstance()\n","import React, { useContext } from 'react'\nimport CalenderContext from 'lib/calender-context'\nimport { StyledHeader } from './styles'\nimport { perDate } from 'tools'\n\nexport default function Header() {\n  const { year, month, setMonth, setYear, lookAndFeel } =\n    useContext(CalenderContext)\n\n  const changeMonth = (action: MontSwitchType) => {\n    if (action === 'prev') {\n      if (month >= 2) return setMonth(month - 1)\n      else {\n        setYear(year - 1)\n        setMonth(12)\n      }\n    }\n\n    if (action === 'next') {\n      if (month <= 11) return setMonth(month + 1)\n      else {\n        setYear(year + 1)\n        setMonth(1)\n      }\n    }\n  }\n\n  return (\n    <StyledHeader lookAndFeel={lookAndFeel}>\n      <button onClick={() => changeMonth('prev')} children='‹' />\n      <p>\n        {perDate.getMonthNameByNumber(month)} {year}\n      </p>\n      <button onClick={() => changeMonth('next')} children='›' />\n    </StyledHeader>\n  )\n}\n","import React, { useContext } from \"react\";\nimport CalenderContext from \"../lib/calender-context\";\nimport { COLORS, WEEK_DAYS } from \"../constant\";\nimport perDate from \"../tools/persian-date-tools\";\n\ninterface Props {\n  week: Week;\n}\n\nexport default function RenderDays(props: Props) {\n  const { week } = props;\n  const {\n    year,\n    month,\n    selectMethod,\n    selectedDay,\n    setSelectedDay,\n    onSelect,\n    lookAndFeel\n  } = useContext(CalenderContext);\n  const {\n    currentDayBg,\n    dayTextColor,\n    holidayText,\n    holidayBg,\n    currentDayText,\n    dayBgColor,\n    todayBg,\n    todayTxtColor\n  } = lookAndFeel;\n\n  const checkIfSelectedDay = (dayValue: number): boolean => {\n    if (!dayValue) return false;\n    return selectedDay?.dayNumber === dayValue;\n  };\n\n  const applyDayTxtColor = (dayInWeek: number, dayValue: number): string => {\n    if (perDate.isToday(year, month, dayValue)) return todayTxtColor;\n    if (checkIfSelectedDay(dayValue)) return currentDayText || COLORS.TXT_FIRST;\n    if (perDate.isFriday(dayInWeek)) return holidayText || COLORS.HOLIDAY_BG;\n    else return dayTextColor || COLORS.TXT_FIRST;\n  };\n\n  const applyDyBgColor = (dayValue: number, dayInWeek: number): string => {\n    const { HOLIDAY_BG, TODAY_BG, TRANSPARENT, NORMAL_DAY_BG, ACCENT } = COLORS;\n\n    if (!dayValue) return TRANSPARENT;\n    if (checkIfSelectedDay(dayValue)) return currentDayBg || ACCENT;\n    if (perDate.isToday(year, month, dayValue)) return todayBg || TODAY_BG;\n    if (perDate.isFriday(+dayInWeek)) return holidayBg || HOLIDAY_BG;\n\n    return dayBgColor || NORMAL_DAY_BG;\n  };\n\n  const handleDayClick = (dayValue: number, dayInWeek: number) => {\n    if (!dayValue) return;\n\n    let selectionInfo;\n    const clickedDayInfo = {\n      year,\n      month,\n      dayNumber: dayValue,\n      dayLabel: Object.values(WEEK_DAYS)[dayInWeek]\n    };\n\n    if (selectMethod === \"single\") selectionInfo = pickSingleDay(clickedDayInfo);\n    if (selectMethod === \"range\") {\n      // Todo: implement it later\n      // selectionInfo = pickSeveralDays(clickedDayInfo)\n    }\n\n    onSelect(selectionInfo);\n  };\n\n  const pickSingleDay = (clickedDayInfo: DateItem) => {\n    setSelectedDay(\n      selectedDay?.dayNumber === clickedDayInfo.dayNumber ? {} : clickedDayInfo\n    );\n    return clickedDayInfo;\n  };\n\n  const pickSeveralDays = (clickedDayInfo: DateItem) => {\n    // Todo: implement it later\n    // const { start, end } = daysRange || {}\n    // if (!start) return setDaysRange({ start: clickedDayInfo })\n    // if (!end) return setDaysRange({ start, end: clickedDayInfo })\n    // if (start?.dayNumber && end?.dayNumber)\n    //   return setDaysRange({ start: clickedDayInfo })\n  };\n\n  return (\n    <tr>\n      {Object.entries(week).map(([dayInWeek, dayValue], i) => (\n        <td\n          key={dayValue || (dayInWeek + `${i}`)}\n          onClick={() => handleDayClick(dayValue, +dayInWeek)}\n          style={{\n            color: applyDayTxtColor(+dayInWeek, dayValue),\n            backgroundColor: applyDyBgColor(dayValue, +dayInWeek)\n          }}\n        >\n          {dayValue}\n        </td>\n      ))}\n    </tr>\n  );\n}\n","function generateArr(length: number, formatArr?: Function): any[] {\n  return Array.from({ length }, (v, k) => !!formatArr && formatArr(v, k));\n}\n\nexport {generateArr}\n","export enum COLORS {\n  TXT_FIRST = \"#D2D2D2\",\n  TRANSPARENT = \"transparent\",\n  ACCENT = \"#273c75\",\n  HOLIDAY_BG = \"#473938\",\n  HOLIDAY_TXT = \"#E56C6E\",\n  NORMAL_DAY_BG = \"#3F3F3F\",\n  TODAY_BG = \"#2a2a2a\",\n  BORDER = \"#414141\"\n}\n\n","// @ts-nocheck\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport Header from \"./components/header/Header\";\nimport CalenderContext from \"./lib/calender-context\";\nimport RenderDays from \"./components/RenderDays\";\nimport perDate from \"./tools/persian-date-tools\";\nimport { WEEK_DAYS } from \"./constant\";\nimport { generateArr } from \"./utils\";\nimport styles from \"./lib/style.module.css\";\nimport { COLORS } from \"./theme/colors\";\nimport \"./assets/styles/index.css\";\n\ninterface Props {\n  onSelect: (day: DateItem) => void;\n  style?: StyleObject;\n  className?: string;\n}\n\nexport function Calendar(props: Props): JSX.Element {\n  const { onSelect, style, className = \"\" } = props;\n  const { currentDate } = perDate;\n  const [year, setYear] = useState<number>(currentDate.year);\n  const [month, setMonth] = useState<number>(currentDate.month.number);\n  const [selectedDay, setSelectedDay] = useState<DateItem>({});\n  const [daysRange, setDaysRange] = useState<DayRange>({});\n  const selectMethod: DaySelectType = \"single\";\n  const monthLength: number = perDate.getMonthLength(year, month);\n  const firstDayOfMonth: number = perDate.getFirstDayOfMonth(year, month);\n  const calenderRowWeek = firstDayOfMonth > 4 ? 6 : 5; // 4 === Wednesday\n\n  const generateCalenderWeeks = (): (() => Week[]) => {\n    let currentDay: number = 1;\n\n    const getDayValue = (weekDayNumber: number, i: number): number => {\n      if (currentDay > monthLength) return;\n      if (i !== 0) return currentDay++;\n      if (i === 0 && weekDayNumber >= firstDayOfMonth) return currentDay++;\n    };\n\n    const createWeekData = (i) => {\n      const data = {};\n      generateArr(7).forEach((item, j) => (data[j] = getDayValue(j, i)));\n      return data;\n    };\n\n    return () =>\n      generateArr(calenderRowWeek).map((item: Week, i) => createWeekData(i));\n  };\n\n  const calenderWeekList = generateCalenderWeeks();\n\n  const resetSelectedDay = () => selectMethod === \"single\" && setSelectedDay({});\n\n  const sharedItems = {\n    year,\n    month,\n    selectedDay,\n    daysRange,\n    setDaysRange,\n    setSelectedDay,\n    selectMethod,\n    setMonth,\n    setYear,\n    onSelect,\n    lookAndFeel: style\n  };\n\n\n  useEffect(resetSelectedDay, [month, year]);\n\n  return (\n    <ThemeProvider theme={COLORS}>\n      <CalenderContext.Provider value={sharedItems}>\n        <Header />\n        <div className={styles.calender + \" \" + className}>\n          <table>\n            <thead>\n            <tr\n              style={{\n                color: style.weekDayNameColor,\n                background: style.weekDayNameBg || \"transparent\"\n              }}\n            >\n              {Object.values(WEEK_DAYS).map((dayItem) => (\n                <td key={dayItem}>{dayItem}</td>\n              ))}\n            </tr>\n            </thead>\n            <tbody>\n            {calenderWeekList().map((week, i) => (\n              <Fragment key={i + Math.random()}>\n                <RenderDays week={week} />\n              </Fragment>\n            ))}\n            </tbody>\n          </table>\n        </div>\n      </CalenderContext.Provider>\n    </ThemeProvider>\n  );\n}\n"],"names":["CalenderContext","createContext","StyledHeader","styled","header","lookAndFeel","theme","headBorderColor","BORDER","headTitleColor","headBtnColor","COLORS","WEEK_DAYS","PERSIAN_MONTH","PersianDateTools","constructor","year","month","day","jalaali","jalaaliToDateObject","jalaaliMonthLength","locale","todayDateIntl","Date","now","todayDatePer","toJalaali","getSingletonInstance","instance","grabDate","options","toLocaleDateString","currentDate","jy","number","jm","name","jd","weekday","getMonthNameByNumber","num","getFirstDayOfMonth","convertToIntlDate","getDay","isOnCurrentMonth","monthNumber","isToday","isFriday","dayInWeek","Header","setMonth","setYear","useContext","changeMonth","action","React","onClick","children","perDate","RenderDays","props","week","selectMethod","selectedDay","setSelectedDay","onSelect","currentDayBg","dayTextColor","holidayText","holidayBg","currentDayText","dayBgColor","todayBg","todayTxtColor","checkIfSelectedDay","dayValue","dayNumber","applyDayTxtColor","TXT_FIRST","HOLIDAY_BG","applyDyBgColor","TODAY_BG","TRANSPARENT","NORMAL_DAY_BG","ACCENT","handleDayClick","selectionInfo","clickedDayInfo","dayLabel","Object","values","pickSingleDay","entries","map","i","key","style","color","backgroundColor","generateArr","length","formatArr","Array","from","v","k","Calendar","className","useState","daysRange","setDaysRange","monthLength","getMonthLength","firstDayOfMonth","calenderRowWeek","generateCalenderWeeks","currentDay","getDayValue","weekDayNumber","createWeekData","data","forEach","item","j","calenderWeekList","resetSelectedDay","sharedItems","useEffect","ThemeProvider","Provider","value","styles","calender","weekDayNameColor","background","weekDayNameBg","dayItem","Fragment","Math","random"],"mappings":"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"}